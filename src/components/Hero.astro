---
import { siteConfig } from "../config";

const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
const hasEducation = siteConfig.education && siteConfig.education.length > 0;
---

<div
  id="hero"
  class="relative isolate overflow-hidden bg-white py-24 md:h-screen"
  style={`--accent-color: ${siteConfig.accentColor}`}
>
  <!-- Animated gradient background -->
   <div class="absolute inset-0 -z-10 bg-gradient-animation">
    <div class="gradient-layer-1"></div>
    <div class="gradient-layer-2"></div>
    <div class="gradient-layer-3"></div>
   </div>

  <!-- Navigation Bar -->
  <div class="relative z-20 pt-8 px-4 sm:px-8 md:px-12">
    <div class="max-w-2xl mx-auto">
      <div class="nav-bar-container">
        <svg 
          class="nav-icon" 
          xmlns="http://www.w3.org/2000/svg" 
          width="20" 
          height="20" 
          viewBox="0 0 24 24" 
          fill="none" 
          stroke="currentColor" 
          stroke-width="2" 
          stroke-linecap="round" 
          stroke-linejoin="round"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
          <path d="M4 6l16 0"></path>
          <path d="M4 12l16 0"></path>
          <path d="M4 18l16 0"></path>
        </svg>
        <button
          type="button"
          id="nav-toggle"
          class="nav-button"
        >
          Navigate <to class=""></to>
        </button>
        <div class="nav-dropdown" id="nav-dropdown" style="display: none;">
          <a href="#about" class="nav-item">About</a>
          {hasProjects && <a href="#projects" class="nav-item">Projects</a>}
          {hasExperience && <a href="#experience" class="nav-item">Experience</a>}
          {hasEducation && <a href="#education" class="nav-item">Education</a>}
        </div>
      </div>
    </div>
  </div>

  <!-- Hero Content -->
  <div class="h-full mx-auto p-8 sm:p-12 md:p-24 flex items-center">
    <div>
      <h2
        class="text-pretty text-xl sm:text-2xl md:text-5xl font-bold tracking-tight text-gray-700 animate-fade-in"
      >
        Hello! ðŸ‘‹
      </h2>
      <h1
        class="mt-6 sm:mt-8 md:mt-10 trxt-pretty text-4xl sm:text-5xl md:text-6xl lg:text-8xl font-bold tracking-tight animate-fade-in animation-delay-200"
      >
        I'm <span class="gradient-text">{siteConfig.name}</span>
      </h1>
      <p
        class="mt-4 sm:mt-6 md:mt-8 text-pretty text-base sm:text-lg md:text-xl/8 font-medium text-gray-600 animate-fade-in animation-delay-400"
      >
        {siteConfig.title}
      </p>
    </div>
  </div>
  
  <!-- Social Media Icons -->
  <div
    class="absolute bottom-0 left-0 right-0 p-8 sm:-12 md:p-24 flex gap-x-4 sm:gap-x-6 md:gap-x-8 text-gray-700 animation-delay-600"
  >
    {siteConfig.social?.email && (

        href={'mailto:${siteConfig.social.email}'}
        aria-label="Email"
        class="transition-colors duration-300 hover:text-[var(--accent-color)]"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" />
          <path d="M3 7l9 6l9 -6" />
        </svg>
      </a>
    )}

    {siteConfig.social?.linkedin && (

        href={siteConfig.social.linkedin}
        target="_blank"
        rel="noopener noreferrer"
        aria-label="LinkedIn"
        class="transition-colors duration-300 hover:text-[var(--accent-color)]"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M8 11v5" />
          <path d="M8 8v.01" />
          <path d="M12 16v-5" />
          <path d="M16 16v-3a2 2 0 1 0 -4 0" />
          <path d="M3 7a4 4 0 0 1 4 -4h10a4 4 0 0 1 4 4v10a4 4 0 0 1 -4 4h-10a4 4 0 0 1 -4 -4z" />
        </svg>
      </a>
    )}

    {siteConfig.social?.github && (
        
        href={siteConfig.social.github}
        target="_blank"
        rel="noopener noreferrer"
        aria-label="GitHub"
        class="transition-colors duration-300 hover:text-[var(--accent-color)]"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" />
        </svg>
      </a>
    )}
  </div>
</div>

<script>
  const navToggle = document.getElementById('nav-toggle');
  const navDropdown = document.getElementById('nav-dropdown');

  // Toggle dropdown when clicking the button
  navToggle?.addEventListener('click', () => {
    if (navDropdown) {
      const isVisible = navDropdown.style.display === 'block';
      navDropdown.style.display = isVisible ? 'none' : 'block';
    }
  });

  // Close dropdown when clicking outside
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (navToggle && navDropdown && !navToggle.contains(target) && !navDropdown.contains(target)) {
      navDropdown.style.display = 'none';
    }
  });

  // Close dropdown when clicking a nav item
  const navItems = document.querySelectorAll('.nav-item');
  navItems.forEach(item => {
    item.addEventListener('click', () => {
      if (navDropdown) {
        navDropdown.style.display = 'none';
      }
    });
  });

  // Close dropdown on Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && navDropdown) {
      navDropdown.style.display = 'none';
    }
  });
</script>

<style>
  /* Animated gradient background */
  .bg-gradient-animation {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .gradient-layer-1,
  .gradient-layer-2,
  .gradient-layer-3 {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0.6;
  }

  .gradient-layer-1 {
    background: radial-gradient(
      circle at 20% 30%,
      var(--accent-color) 0%,
      transparent 50%
    );
    animation: float 20s ease-in-out infinite;
  }

  .gradient-layer-2 {
    background: radial-gradient(
      circle at 50% 50%,
      rgba(255, 255, 255, 0.9) 0%,
      transparent 70%
    );
    animation: pulse 10s ease-in-out infinite;
  }

  @keyframes float {
    0%,
    100% {
      transform: translate(0, 0) scale(1);
    }
    33% {
      transform: translate(30px, -30px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 0.6;
    }
    50% {
      opacity: 0.8;
    }
  }

  /* Navigation bar (styled like search bar) */
  .nav-bar-container {
    position: relative;
    width: 100%;
  }

  .nav-button {
    width: 100%;
    padding: 14px 20px 14px 50px;
    font-size: 16px;
    border: 2px solid rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    font-family: 'IBM Plex Mono', monospace;
    text-align: left;
    cursor: pointer;
    color: #6b7280;
  }

  .nav-button:hover {
    border-color: var(--accent-color);
    background: white;
  }

  .nav-button:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 3px rgba(241, 156, 187, 0.1);
    background: white;
  }

  .nav-icon {
    position: absolute;
    left: 18px;
    top: 50%;
    transform: translateY(-50%);
    color: #6b7280;
    pointer-events: none;
    z-index: 10;
  }

  .nav-dropdown {
    position: absolute;
    top: calc(100% + 8px);
    left: 0;
    right: 0;
    background: white;
    border: 2px solid rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    z-index: 50;
  }

  .nav-item {
    display: block;
    padding: 12px 20px;
    color: #374151;
    text-decoration: none;
    transition: all 0.2s ease;
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    font-family: 'IBM Plex Mono', monospace;
  }

  .nav-item: last-child {
    border-bottom: none;
  }

  .nav-item: hover {
    background: rgba(241, 156, 187, 0.1);
    color: var(--accent-color);
    padding-left: 28px;
  }

  /* Gradient text effect */
  .gradient-text {
    background: linear-gradient(
      135deg,
      var(--accent-color) 0%,
      color-mix(in srgb, var(--accent-color) 60%, #000) 50%,
      color-mix(in srgb, var(--accent-color) 40%, #fff) 100%,
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientShift 8s ease infinite;
    background-size: 200% 200%;
  }

  @keyframes gradientShift {
    0%,
    100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fadeIn 0.8s ease-out forwards;
    opacity: 0;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }

  .animation-delay-600 {
    animation-delay: 0.6s;
  }
</style>